{"version":3,"file":"static/chunks/657-3f30af345ce893c6.js","mappings":"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","sources":["webpack://_N_E/./lib/Debug.tsx","webpack://_N_E/./lib/SettingsMenu.tsx","webpack://_N_E/./lib/client-utils.ts","webpack://_N_E/./styles/Debug.module.css","webpack://_N_E/./styles/SettingsMenu.module.css"],"sourcesContent":["import * as React from 'react';\r\nimport { useRoomContext } from '@livekit/components-react';\r\nimport { setLogLevel, LogLevel, RemoteTrackPublication, setLogExtension } from 'livekit-client';\r\n// @ts-ignore\r\nimport { tinykeys } from 'tinykeys';\r\nimport { datadogLogs } from '@datadog/browser-logs';\r\n\r\nimport styles from '../styles/Debug.module.css';\r\n\r\nexport const useDebugMode = ({ logLevel }: { logLevel?: LogLevel }) => {\r\n  const room = useRoomContext();\r\n\r\n  React.useEffect(() => {\r\n    setLogLevel(logLevel ?? 'debug');\r\n\r\n    if (process.env.NEXT_PUBLIC_DATADOG_CLIENT_TOKEN && process.env.NEXT_PUBLIC_DATADOG_SITE) {\r\n      console.log('setting up datadog logs');\r\n      datadogLogs.init({\r\n        clientToken: process.env.NEXT_PUBLIC_DATADOG_CLIENT_TOKEN,\r\n        site: process.env.NEXT_PUBLIC_DATADOG_SITE,\r\n        forwardErrorsToLogs: true,\r\n        sessionSampleRate: 100,\r\n      });\r\n\r\n      setLogExtension((level, msg, context) => {\r\n        switch (level) {\r\n          case LogLevel.debug:\r\n            datadogLogs.logger.debug(msg, context);\r\n            break;\r\n          case LogLevel.info:\r\n            datadogLogs.logger.info(msg, context);\r\n            break;\r\n          case LogLevel.warn:\r\n            datadogLogs.logger.warn(msg, context);\r\n            break;\r\n          case LogLevel.error:\r\n            datadogLogs.logger.error(msg, context);\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n    }\r\n\r\n    // @ts-expect-error\r\n    window.__lk_room = room;\r\n\r\n    return () => {\r\n      // @ts-expect-error\r\n      window.__lk_room = undefined;\r\n    };\r\n  }, [room, logLevel]);\r\n};\r\n\r\nexport const DebugMode = ({ logLevel }: { logLevel?: LogLevel }) => {\r\n  const room = useRoomContext();\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  const [, setRender] = React.useState({});\r\n  const [roomSid, setRoomSid] = React.useState('');\r\n\r\n  React.useEffect(() => {\r\n    room.getSid().then(setRoomSid);\r\n  }, [room]);\r\n\r\n  useDebugMode({ logLevel });\r\n\r\n  React.useEffect(() => {\r\n    if (window) {\r\n      const unsubscribe = tinykeys(window, {\r\n        'Shift+D': () => {\r\n          console.log('setting open');\r\n          setIsOpen((open) => !open);\r\n        },\r\n      });\r\n\r\n      // timer to re-render\r\n      const interval = setInterval(() => {\r\n        setRender({});\r\n      }, 1000);\r\n\r\n      return () => {\r\n        unsubscribe();\r\n        clearInterval(interval);\r\n      };\r\n    }\r\n  }, [isOpen]);\r\n\r\n  if (typeof window === 'undefined' || !isOpen) {\r\n    return null;\r\n  }\r\n\r\n  const handleSimulate = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n    const { value } = event.target;\r\n    if (value == '') {\r\n      return;\r\n    }\r\n    event.target.value = '';\r\n    let isReconnect = false;\r\n    switch (value) {\r\n      case 'signal-reconnect':\r\n        isReconnect = true;\r\n\r\n      // fall through\r\n      default:\r\n        // @ts-expect-error\r\n        room.simulateScenario(value);\r\n    }\r\n  };\r\n\r\n  const lp = room.localParticipant;\r\n\r\n  if (!isOpen) {\r\n    return <></>;\r\n  } else {\r\n    return (\r\n      <div className={styles.overlay}>\r\n        <section id=\"room-info\">\r\n          <h3>\r\n            Room Info {room.name}: {roomSid}\r\n          </h3>\r\n        </section>\r\n        <details open>\r\n          <summary>\r\n            <b>Local Participant: {lp.identity}</b>\r\n          </summary>\r\n          <details open className={styles.detailsSection}>\r\n            <summary>\r\n              <b>Published tracks</b>\r\n            </summary>\r\n            <div>\r\n              {Array.from(lp.trackPublications.values()).map((t) => (\r\n                <>\r\n                  <div>\r\n                    <i>\r\n                      {t.source.toString()}\r\n                      &nbsp;<span>{t.trackSid}</span>\r\n                    </i>\r\n                  </div>\r\n                  <table>\r\n                    <tbody>\r\n                      <tr>\r\n                        <td>Kind</td>\r\n                        <td>\r\n                          {t.kind}&nbsp;\r\n                          {t.kind === 'video' && (\r\n                            <span>\r\n                              {t.track?.dimensions?.width}x{t.track?.dimensions?.height}\r\n                            </span>\r\n                          )}\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Bitrate</td>\r\n                        <td>{Math.ceil(t.track!.currentBitrate / 1000)} kbps</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </details>\r\n          <details open className={styles.detailsSection}>\r\n            <summary>\r\n              <b>Permissions</b>\r\n            </summary>\r\n            <div>\r\n              <table>\r\n                <tbody>\r\n                  {lp.permissions &&\r\n                    Object.entries(lp.permissions).map(([key, val]) => (\r\n                      <>\r\n                        <tr>\r\n                          <td>{key}</td>\r\n                          {key !== 'canPublishSources' ? (\r\n                            <td>{val.toString()}</td>\r\n                          ) : (\r\n                            <td> {val.join(', ')} </td>\r\n                          )}\r\n                        </tr>\r\n                      </>\r\n                    ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </details>\r\n        </details>\r\n\r\n        <details>\r\n          <summary>\r\n            <b>Remote Participants</b>\r\n          </summary>\r\n          {Array.from(room.remoteParticipants.values()).map((p) => (\r\n            <details key={p.sid} className={styles.detailsSection}>\r\n              <summary>\r\n                <b>\r\n                  {p.identity}\r\n                  <span></span>\r\n                </b>\r\n              </summary>\r\n              <div>\r\n                {Array.from(p.trackPublications.values()).map((t) => (\r\n                  <>\r\n                    <div>\r\n                      <i>\r\n                        {t.source.toString()}\r\n                        &nbsp;<span>{t.trackSid}</span>\r\n                      </i>\r\n                    </div>\r\n                    <table>\r\n                      <tbody>\r\n                        <tr>\r\n                          <td>Kind</td>\r\n                          <td>\r\n                            {t.kind}&nbsp;\r\n                            {t.kind === 'video' && (\r\n                              <span>\r\n                                {t.dimensions?.width}x{t.dimensions?.height}\r\n                              </span>\r\n                            )}\r\n                          </td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>Status</td>\r\n                          <td>{trackStatus(t)}</td>\r\n                        </tr>\r\n                        {t.track && (\r\n                          <tr>\r\n                            <td>Bitrate</td>\r\n                            <td>{Math.ceil(t.track.currentBitrate / 1000)} kbps</td>\r\n                          </tr>\r\n                        )}\r\n                      </tbody>\r\n                    </table>\r\n                  </>\r\n                ))}\r\n              </div>\r\n            </details>\r\n          ))}\r\n        </details>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nfunction trackStatus(t: RemoteTrackPublication): string {\r\n  if (t.isSubscribed) {\r\n    return t.isEnabled ? 'enabled' : 'disabled';\r\n  } else {\r\n    return 'unsubscribed';\r\n  }\r\n}\r\n","'use client';\r\nimport * as React from 'react';\r\nimport { Track } from 'livekit-client';\r\nimport {\r\n  useMaybeLayoutContext,\r\n  MediaDeviceMenu,\r\n  TrackToggle,\r\n  useRoomContext,\r\n  useIsRecording,\r\n} from '@livekit/components-react';\r\nimport { useKrispNoiseFilter } from '@livekit/components-react/krisp';\r\nimport styles from '../styles/SettingsMenu.module.css';\r\n\r\n/**\r\n * @alpha\r\n */\r\nexport interface SettingsMenuProps extends React.HTMLAttributes<HTMLDivElement> {}\r\n\r\n/**\r\n * @alpha\r\n */\r\nexport function SettingsMenu(props: SettingsMenuProps) {\r\n  const layoutContext = useMaybeLayoutContext();\r\n  const room = useRoomContext();\r\n  const recordingEndpoint = process.env.NEXT_PUBLIC_LK_RECORD_ENDPOINT;\r\n\r\n  const settings = React.useMemo(() => {\r\n    return {\r\n      media: { camera: true, microphone: true, label: 'Media Devices', speaker: true },\r\n      effects: { label: 'Effects' },\r\n      recording: recordingEndpoint ? { label: 'Recording' } : undefined,\r\n    };\r\n  }, []);\r\n\r\n  const tabs = React.useMemo(\r\n    () => Object.keys(settings).filter((t) => t !== undefined) as Array<keyof typeof settings>,\r\n    [settings],\r\n  );\r\n  const [activeTab, setActiveTab] = React.useState(tabs[0]);\r\n\r\n  const { isNoiseFilterEnabled, setNoiseFilterEnabled, isNoiseFilterPending } =\r\n    useKrispNoiseFilter();\r\n\r\n  React.useEffect(() => {\r\n    // enable Krisp by default\r\n    setNoiseFilterEnabled(true);\r\n  }, []);\r\n\r\n  const isRecording = useIsRecording();\r\n  const [initialRecStatus, setInitialRecStatus] = React.useState(isRecording);\r\n  const [processingRecRequest, setProcessingRecRequest] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    if (initialRecStatus !== isRecording) {\r\n      setProcessingRecRequest(false);\r\n    }\r\n  }, [isRecording, initialRecStatus]);\r\n\r\n  const toggleRoomRecording = async () => {\r\n    if (!recordingEndpoint) {\r\n      throw TypeError('No recording endpoint specified');\r\n    }\r\n    if (room.isE2EEEnabled) {\r\n      throw Error('Recording of encrypted meetings is currently not supported');\r\n    }\r\n    setProcessingRecRequest(true);\r\n    setInitialRecStatus(isRecording);\r\n    let response: Response;\r\n    if (isRecording) {\r\n      response = await fetch(recordingEndpoint + `/stop?roomName=${room.name}`);\r\n    } else {\r\n      response = await fetch(recordingEndpoint + `/start?roomName=${room.name}`);\r\n    }\r\n    if (response.ok) {\r\n    } else {\r\n      console.error(\r\n        'Error handling recording request, check server logs:',\r\n        response.status,\r\n        response.statusText,\r\n      );\r\n      setProcessingRecRequest(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"settings-menu\" style={{ width: '100%' }} {...props}>\r\n      <div className={styles.tabs}>\r\n        {tabs.map(\r\n          (tab) =>\r\n            settings[tab] && (\r\n              <button\r\n                className={`${styles.tab} lk-button`}\r\n                key={tab}\r\n                onClick={() => setActiveTab(tab)}\r\n                aria-pressed={tab === activeTab}\r\n              >\r\n                {\r\n                  // @ts-ignore\r\n                  settings[tab].label\r\n                }\r\n              </button>\r\n            ),\r\n        )}\r\n      </div>\r\n      <div className=\"tab-content\">\r\n        {activeTab === 'media' && (\r\n          <>\r\n            {settings.media && settings.media.camera && (\r\n              <>\r\n                <h3>Camera</h3>\r\n                <section className=\"lk-button-group\">\r\n                  <TrackToggle source={Track.Source.Camera}>Camera</TrackToggle>\r\n                  <div className=\"lk-button-group-menu\">\r\n                    <MediaDeviceMenu kind=\"videoinput\" />\r\n                  </div>\r\n                </section>\r\n              </>\r\n            )}\r\n            {settings.media && settings.media.microphone && (\r\n              <>\r\n                <h3>Microphone</h3>\r\n                <section className=\"lk-button-group\">\r\n                  <TrackToggle source={Track.Source.Microphone}>Microphone</TrackToggle>\r\n                  <div className=\"lk-button-group-menu\">\r\n                    <MediaDeviceMenu kind=\"audioinput\" />\r\n                  </div>\r\n                </section>\r\n              </>\r\n            )}\r\n            {settings.media && settings.media.speaker && (\r\n              <>\r\n                <h3>Speaker & Headphones</h3>\r\n                <section className=\"lk-button-group\">\r\n                  <span className=\"lk-button\">Audio Output</span>\r\n                  <div className=\"lk-button-group-menu\">\r\n                    <MediaDeviceMenu kind=\"audiooutput\"></MediaDeviceMenu>\r\n                  </div>\r\n                </section>\r\n              </>\r\n            )}\r\n          </>\r\n        )}\r\n        {activeTab === 'effects' && (\r\n          <>\r\n            <h3>Audio</h3>\r\n            <section>\r\n              <label htmlFor=\"noise-filter\"> Enhanced Noise Cancellation</label>\r\n              <input\r\n                type=\"checkbox\"\r\n                id=\"noise-filter\"\r\n                onChange={(ev) => setNoiseFilterEnabled(ev.target.checked)}\r\n                checked={isNoiseFilterEnabled}\r\n                disabled={isNoiseFilterPending}\r\n              ></input>\r\n            </section>\r\n          </>\r\n        )}\r\n        {activeTab === 'recording' && (\r\n          <>\r\n            <h3>Record Meeting</h3>\r\n            <section>\r\n              <p>\r\n                {isRecording\r\n                  ? 'Meeting is currently being recorded'\r\n                  : 'No active recordings for this meeting'}\r\n              </p>\r\n              <button disabled={processingRecRequest} onClick={() => toggleRoomRecording()}>\r\n                {isRecording ? 'Stop' : 'Start'} Recording\r\n              </button>\r\n            </section>\r\n          </>\r\n        )}\r\n      </div>\r\n      <button\r\n        className={`lk-button ${styles.settingsCloseButton}`}\r\n        onClick={() => layoutContext?.widget.dispatch?.({ msg: 'toggle_settings' })}\r\n      >\r\n        Close\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","export function encodePassphrase(passphrase: string) {\r\n  return encodeURIComponent(passphrase);\r\n}\r\n\r\nexport function decodePassphrase(base64String: string) {\r\n  return decodeURIComponent(base64String);\r\n}\r\n\r\nexport function generateRoomId(): string {\r\n  return `${randomString(4)}-${randomString(4)}`;\r\n}\r\n\r\nexport function randomString(length: number): string {\r\n  let result = '';\r\n  const characters = 'abcdefghijklmnopqrstuvwxyz0123456789';\r\n  const charactersLength = characters.length;\r\n  for (let i = 0; i < length; i++) {\r\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n  }\r\n  return result;\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Debug_overlay__SZwFO\",\"detailsSection\":\"Debug_detailsSection__vJYFV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settingsCloseButton\":\"SettingsMenu_settingsCloseButton__mdSd2\",\"tabs\":\"SettingsMenu_tabs__uq0cC\",\"tab\":\"SettingsMenu_tab__Pfa2A\"};"],"names":["useDebugMode","logLevel","param","room","useRoomContext","React","setLogLevel","process","env","NEXT_PUBLIC_DATADOG_CLIENT_TOKEN","NEXT_PUBLIC_DATADOG_SITE","console","log","datadogLogs","init","clientToken","site","forwardErrorsToLogs","sessionSampleRate","setLogExtension","level","msg","context","LogLevel","debug","logger","info","warn","error","window","__lk_room","undefined","DebugMode","isOpen","setIsOpen","setRender","roomSid","setRoomSid","getSid","then","unsubscribe","tinykeys","open","interval","setInterval","clearInterval","lp","localParticipant","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","div","className","styles","jsx","section","id","h3","name","details","summary","b","identity","Array","from","trackPublications","values","map","t","Fragment","i","source","toString","span","trackSid","table","tbody","tr","td","kind","track","dimensions","width","height","Math","ceil","currentBitrate","permissions","Object","entries","key","val","join","remoteParticipants","p","isSubscribed","isEnabled","sid","SettingsMenu","props","layoutContext","useMaybeLayoutContext","recordingEndpoint","NEXT_PUBLIC_LK_RECORD_ENDPOINT","settings","media","camera","microphone","label","speaker","effects","recording","tabs","keys","filter","activeTab","setActiveTab","isNoiseFilterEnabled","setNoiseFilterEnabled","isNoiseFilterPending","useKrispNoiseFilter","isRecording","useIsRecording","initialRecStatus","setInitialRecStatus","processingRecRequest","setProcessingRecRequest","toggleRoomRecording","response","TypeError","isE2EEEnabled","Error","fetch","concat","ok","status","statusText","style","tab","button","onClick","aria-pressed","TrackToggle","Track","Source","Camera","MediaDeviceMenu","Microphone","htmlFor","input","type","onChange","ev","target","checked","disabled","widget","dispatch","encodePassphrase","passphrase","encodeURIComponent","decodePassphrase","base64String","decodeURIComponent","generateRoomId","randomString","length","result","characters","charactersLength","charAt","floor","random","module","exports"],"sourceRoot":""}