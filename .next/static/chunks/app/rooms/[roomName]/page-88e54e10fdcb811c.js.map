{"version":3,"file":"static/chunks/app/rooms/[roomName]/page-88e54e10fdcb811c.js","mappings":"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","sources":["webpack://_N_E/?fcfe","webpack://_N_E/./lib/RecordingIndicator.tsx","webpack://_N_E/./app/rooms/[roomName]/PageClientImpl.tsx","webpack://_N_E/./node_modules/.pnpm/next@14.2.24_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/api/navigation.js"],"sourcesContent":["import(/* webpackMode: \"eager\", webpackExports: [\"PageClientImpl\"] */ \"D:\\\\meet\\\\app\\\\rooms\\\\[roomName]\\\\PageClientImpl.tsx\");\n","import { useIsRecording } from '@livekit/components-react';\r\nimport * as React from 'react';\r\n\r\nexport function RecordingIndicator() {\r\n  const isRecording = useIsRecording();\r\n  const [wasRecording, setWasRecording] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    if (isRecording !== wasRecording) {\r\n      setWasRecording(isRecording);\r\n      if (isRecording) {\r\n        window.alert('This meeting is being recorded');\r\n      }\r\n    }\r\n  }, [isRecording]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        position: 'absolute',\r\n        top: '0',\r\n        left: '0',\r\n        width: '100%',\r\n        height: '100%',\r\n        boxShadow: isRecording ? 'red 0px 0px 0px 3px inset' : 'none',\r\n        pointerEvents: 'none',\r\n      }}\r\n    ></div>\r\n  );\r\n}\r\n","'use client';\r\n\r\nimport { decodePassphrase } from '@/lib/client-utils';\r\nimport { DebugMode } from '@/lib/Debug';\r\nimport { RecordingIndicator } from '@/lib/RecordingIndicator';\r\nimport { SettingsMenu } from '@/lib/SettingsMenu';\r\nimport { ConnectionDetails } from '@/lib/types';\r\nimport {\r\n  formatChatMessageLinks,\r\n  LiveKitRoom,\r\n  LocalUserChoices,\r\n  PreJoin,\r\n  VideoConference,\r\n} from '@livekit/components-react';\r\nimport {\r\n  ExternalE2EEKeyProvider,\r\n  RoomOptions,\r\n  VideoCodec,\r\n  VideoPresets,\r\n  Room,\r\n  DeviceUnsupportedError,\r\n  RoomConnectOptions,\r\n} from 'livekit-client';\r\nimport { useRouter } from 'next/navigation';\r\nimport React from 'react';\r\n\r\nconst CONN_DETAILS_ENDPOINT =\r\n  process.env.NEXT_PUBLIC_CONN_DETAILS_ENDPOINT ?? '/api/connection-details';\r\nconst SHOW_SETTINGS_MENU = process.env.NEXT_PUBLIC_SHOW_SETTINGS_MENU == 'true';\r\n\r\nexport function PageClientImpl(props: {\r\n  roomName: string;\r\n  region?: string;\r\n  hq: boolean;\r\n  codec: VideoCodec;\r\n}) {\r\n  const [preJoinChoices, setPreJoinChoices] = React.useState<LocalUserChoices | undefined>(\r\n    undefined,\r\n  );\r\n  const preJoinDefaults = React.useMemo(() => {\r\n    return {\r\n      username: '',\r\n      videoEnabled: true,\r\n      audioEnabled: true,\r\n    };\r\n  }, []);\r\n  const [connectionDetails, setConnectionDetails] = React.useState<ConnectionDetails | undefined>(\r\n    undefined,\r\n  );\r\n\r\n  const handlePreJoinSubmit = React.useCallback(async (values: LocalUserChoices) => {\r\n    setPreJoinChoices(values);\r\n    const url = new URL(CONN_DETAILS_ENDPOINT, window.location.origin);\r\n    url.searchParams.append('roomName', props.roomName);\r\n    url.searchParams.append('participantName', values.username);\r\n    if (props.region) {\r\n      url.searchParams.append('region', props.region);\r\n    }\r\n    const connectionDetailsResp = await fetch(url.toString());\r\n    const connectionDetailsData = await connectionDetailsResp.json();\r\n    setConnectionDetails(connectionDetailsData);\r\n  }, []);\r\n  const handlePreJoinError = React.useCallback((e: any) => console.error(e), []);\r\n\r\n  return (\r\n    <main data-lk-theme=\"default\" style={{ height: '100%' }}>\r\n      {connectionDetails === undefined || preJoinChoices === undefined ? (\r\n        <div style={{ display: 'grid', placeItems: 'center', height: '100%' }}>\r\n          <PreJoin\r\n            defaults={preJoinDefaults}\r\n            onSubmit={handlePreJoinSubmit}\r\n            onError={handlePreJoinError}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <VideoConferenceComponent\r\n          connectionDetails={connectionDetails}\r\n          userChoices={preJoinChoices}\r\n          options={{ codec: props.codec, hq: props.hq }}\r\n        />\r\n      )}\r\n    </main>\r\n  );\r\n}\r\n\r\nfunction VideoConferenceComponent(props: {\r\n  userChoices: LocalUserChoices;\r\n  connectionDetails: ConnectionDetails;\r\n  options: {\r\n    hq: boolean;\r\n    codec: VideoCodec;\r\n  };\r\n}) {\r\n  const e2eePassphrase =\r\n    typeof window !== 'undefined' && decodePassphrase(location.hash.substring(1));\r\n\r\n  const worker =\r\n    typeof window !== 'undefined' &&\r\n    e2eePassphrase &&\r\n    new Worker(new URL('livekit-client/e2ee-worker', import.meta.url));\r\n  const e2eeEnabled = !!(e2eePassphrase && worker);\r\n  const keyProvider = new ExternalE2EEKeyProvider();\r\n  const [e2eeSetupComplete, setE2eeSetupComplete] = React.useState(false);\r\n\r\n  const roomOptions = React.useMemo((): RoomOptions => {\r\n    let videoCodec: VideoCodec | undefined = props.options.codec ? props.options.codec : 'vp9';\r\n    if (e2eeEnabled && (videoCodec === 'av1' || videoCodec === 'vp9')) {\r\n      videoCodec = undefined;\r\n    }\r\n    return {\r\n      videoCaptureDefaults: {\r\n        deviceId: props.userChoices.videoDeviceId ?? undefined,\r\n        resolution: props.options.hq ? VideoPresets.h2160 : VideoPresets.h720,\r\n      },\r\n      publishDefaults: {\r\n        dtx: false,\r\n        videoSimulcastLayers: props.options.hq\r\n          ? [VideoPresets.h1080, VideoPresets.h720]\r\n          : [VideoPresets.h540, VideoPresets.h216],\r\n        red: !e2eeEnabled,\r\n        videoCodec,\r\n      },\r\n      audioCaptureDefaults: {\r\n        deviceId: props.userChoices.audioDeviceId ?? undefined,\r\n      },\r\n      adaptiveStream: { pixelDensity: 'screen' },\r\n      dynacast: true,\r\n      e2ee: e2eeEnabled\r\n        ? {\r\n            keyProvider,\r\n            worker,\r\n          }\r\n        : undefined,\r\n    };\r\n  }, [props.userChoices, props.options.hq, props.options.codec]);\r\n\r\n  const room = React.useMemo(() => new Room(roomOptions), []);\r\n\r\n  React.useEffect(() => {\r\n    if (e2eeEnabled) {\r\n      keyProvider\r\n        .setKey(decodePassphrase(e2eePassphrase))\r\n        .then(() => {\r\n          room.setE2EEEnabled(true).catch((e) => {\r\n            if (e instanceof DeviceUnsupportedError) {\r\n              alert(\r\n                `You're trying to join an encrypted meeting, but your browser does not support it. Please update it to the latest version and try again.`,\r\n              );\r\n              console.error(e);\r\n            } else {\r\n              throw e;\r\n            }\r\n          });\r\n        })\r\n        .then(() => setE2eeSetupComplete(true));\r\n    } else {\r\n      setE2eeSetupComplete(true);\r\n    }\r\n  }, [e2eeEnabled, room, e2eePassphrase]);\r\n\r\n  const connectOptions = React.useMemo((): RoomConnectOptions => {\r\n    return {\r\n      autoSubscribe: true,\r\n    };\r\n  }, []);\r\n\r\n  const router = useRouter();\r\n  const handleOnLeave = React.useCallback(() => router.push('/'), [router]);\r\n  const handleError = React.useCallback((error: Error) => {\r\n    console.error(error);\r\n    alert(`Encountered an unexpected error, check the console logs for details: ${error.message}`);\r\n  }, []);\r\n  const handleEncryptionError = React.useCallback((error: Error) => {\r\n    console.error(error);\r\n    alert(\r\n      `Encountered an unexpected encryption error, check the console logs for details: ${error.message}`,\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <LiveKitRoom\r\n        connect={e2eeSetupComplete}\r\n        room={room}\r\n        token={props.connectionDetails.participantToken}\r\n        serverUrl={props.connectionDetails.serverUrl}\r\n        connectOptions={connectOptions}\r\n        video={props.userChoices.videoEnabled}\r\n        audio={props.userChoices.audioEnabled}\r\n        onDisconnected={handleOnLeave}\r\n        onEncryptionError={handleEncryptionError}\r\n        onError={handleError}\r\n      >\r\n        <VideoConference\r\n          chatMessageFormatter={formatChatMessageLinks}\r\n          SettingsComponent={SHOW_SETTINGS_MENU ? SettingsMenu : undefined}\r\n        />\r\n        <DebugMode />\r\n        <RecordingIndicator />\r\n      </LiveKitRoom>\r\n    </>\r\n  );\r\n}\r\n","export * from \"../client/components/navigation\";\n\n//# sourceMappingURL=navigation.js.map"],"names":["Promise","resolve","then","__webpack_require__","bind","process","RecordingIndicator","isRecording","useIsRecording","wasRecording","setWasRecording","React","window","alert","jsx_runtime","jsx","div","style","position","top","left","width","height","boxShadow","pointerEvents","CONN_DETAILS_ENDPOINT","env","NEXT_PUBLIC_CONN_DETAILS_ENDPOINT","SHOW_SETTINGS_MENU","NEXT_PUBLIC_SHOW_SETTINGS_MENU","PageClientImpl","props","preJoinChoices","setPreJoinChoices","undefined","preJoinDefaults","username","videoEnabled","audioEnabled","connectionDetails","setConnectionDetails","handlePreJoinSubmit","values","url","URL","location","origin","searchParams","append","roomName","region","connectionDetailsResp","fetch","toString","json","handlePreJoinError","console","error","e","main","data-lk-theme","display","placeItems","PreJoin","defaults","onSubmit","onError","VideoConferenceComponent","userChoices","options","codec","hq","e2eePassphrase","decodePassphrase","hash","substring","worker","Worker","tu","p","u","b","e2eeEnabled","keyProvider","ExternalE2EEKeyProvider","e2eeSetupComplete","setE2eeSetupComplete","roomOptions","videoCodec","videoCaptureDefaults","deviceId","videoDeviceId","resolution","VideoPresets","h2160","h720","publishDefaults","dtx","videoSimulcastLayers","h1080","h540","h216","red","audioCaptureDefaults","audioDeviceId","adaptiveStream","pixelDensity","dynacast","e2ee","room","Room","setKey","setE2EEEnabled","catch","DeviceUnsupportedError","connectOptions","autoSubscribe","router","useRouter","handleOnLeave","push","handleError","concat","message","handleEncryptionError","Fragment","jsxs","LiveKitRoom","connect","token","participantToken","serverUrl","video","audio","onDisconnected","onEncryptionError","VideoConference","chatMessageFormatter","formatChatMessageLinks","SettingsComponent","SettingsMenu","DebugMode"],"sourceRoot":""}