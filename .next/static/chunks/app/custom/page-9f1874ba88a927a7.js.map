{"version":3,"file":"static/chunks/app/custom/page-9f1874ba88a927a7.js","mappings":"mFAAAA,QAAAC,OAAA,GAAAC,IAAA,CAAAC,EAAAC,IAAA,CAAAD,EAAA,wMCiBO,SAASE,EAA0BC,CAIzC,EACC,IAAMC,EAEJ,IAAIC,OAAOL,EAAAM,EAAA,KAAIC,IAAIP,EAAAQ,CAAA,CAAAR,EAAAS,CAAA,MAAAT,EAAAU,CAA6C,IAC5DC,EAAc,IAAIC,EAAAA,EAAuBA,CAEzCC,EAC4BC,CAAAA,EAAAA,EAAAA,EAAAA,EAAiBC,OAAOC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAAC,IAC5EC,EAAc,CAAC,CAAEN,CAAAA,GAAkBT,CAAAA,EACnCgB,EAAcC,CAAAA,EAAAA,EAAAA,OAAAA,EAAQ,IACnB,EACLC,gBAAiB,CACfC,qBAAsB,CAACC,EAAAA,EAAYA,CAACC,IAAI,CAAED,EAAAA,EAAYA,CAACE,IAAI,CAAC,CAC5DC,IAAK,CAACR,EACNS,WAAYzB,EAAM0B,KAAK,EAEzBC,eAAgB,CAAEC,aAAc,QAAS,EACzCC,SAAU,GACVC,KAAMd,EACF,CACER,YAAAA,EACAP,OAAAA,CACF,EACA8B,KAAAA,CACN,GACC,EAAE,EAECC,EAAOd,CAAAA,EAAAA,EAAAA,OAAAA,EAAQ,IAAM,IAAIe,EAAAA,EAAIA,CAAChB,GAAc,EAAE,EAChDD,IACFR,EAAY0B,MAAM,CAACxB,GACnBsB,EAAKG,cAAc,CAAC,KAEtB,IAAMC,EAAiBlB,CAAAA,EAAAA,EAAAA,OAAAA,EAAQ,IACtB,EACLmB,cAAe,EACjB,GACC,EAAE,EAEL,MACE,GAAAC,EAAAC,IAAA,EAACC,EAAAA,CAAWA,CAAAA,CACVR,KAAMA,EACNS,MAAOzC,EAAMyC,KAAK,CAClBL,eAAgBA,EAChBM,UAAW1C,EAAM2C,UAAU,CAC3BC,MAAO,GACPC,MAAO,aAEP,GAAAP,EAAAQ,GAAA,EAACC,EAAAA,EAAeA,CAAAA,CACdC,qBAAsBC,EAAAA,CAAsBA,CAC5CC,kBACEC,SAAAA,EAAQC,GAAG,CAACC,8BAA8B,CAAcC,EAAAA,CAAYA,CAAGvB,KAAAA,IAG3E,GAAAO,EAAAQ,GAAA,EAACS,EAAAA,CAASA,CAAAA,CAACC,SAAUC,EAAAA,EAAQA,CAACC,KAAK,KAGzC","sources":["webpack://_N_E/?5e4c","webpack://_N_E/./app/custom/VideoConferenceClientImpl.tsx"],"sourcesContent":["import(/* webpackMode: \"eager\", webpackExports: [\"VideoConferenceClientImpl\"] */ \"D:\\\\meet\\\\app\\\\custom\\\\VideoConferenceClientImpl.tsx\");\n","'use client';\r\n\r\nimport { formatChatMessageLinks, LiveKitRoom, VideoConference } from '@livekit/components-react';\r\nimport {\r\n  ExternalE2EEKeyProvider,\r\n  LogLevel,\r\n  Room,\r\n  RoomConnectOptions,\r\n  RoomOptions,\r\n  VideoPresets,\r\n  type VideoCodec,\r\n} from 'livekit-client';\r\nimport { DebugMode } from '@/lib/Debug';\r\nimport { useMemo } from 'react';\r\nimport { decodePassphrase } from '@/lib/client-utils';\r\nimport { SettingsMenu } from '@/lib/SettingsMenu';\r\n\r\nexport function VideoConferenceClientImpl(props: {\r\n  liveKitUrl: string;\r\n  token: string;\r\n  codec: VideoCodec | undefined;\r\n}) {\r\n  const worker =\r\n    typeof window !== 'undefined' &&\r\n    new Worker(new URL('livekit-client/e2ee-worker', import.meta.url));\r\n  const keyProvider = new ExternalE2EEKeyProvider();\r\n\r\n  const e2eePassphrase =\r\n    typeof window !== 'undefined' ? decodePassphrase(window.location.hash.substring(1)) : undefined;\r\n  const e2eeEnabled = !!(e2eePassphrase && worker);\r\n  const roomOptions = useMemo((): RoomOptions => {\r\n    return {\r\n      publishDefaults: {\r\n        videoSimulcastLayers: [VideoPresets.h540, VideoPresets.h216],\r\n        red: !e2eeEnabled,\r\n        videoCodec: props.codec,\r\n      },\r\n      adaptiveStream: { pixelDensity: 'screen' },\r\n      dynacast: true,\r\n      e2ee: e2eeEnabled\r\n        ? {\r\n            keyProvider,\r\n            worker,\r\n          }\r\n        : undefined,\r\n    };\r\n  }, []);\r\n\r\n  const room = useMemo(() => new Room(roomOptions), []);\r\n  if (e2eeEnabled) {\r\n    keyProvider.setKey(e2eePassphrase);\r\n    room.setE2EEEnabled(true);\r\n  }\r\n  const connectOptions = useMemo((): RoomConnectOptions => {\r\n    return {\r\n      autoSubscribe: true,\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <LiveKitRoom\r\n      room={room}\r\n      token={props.token}\r\n      connectOptions={connectOptions}\r\n      serverUrl={props.liveKitUrl}\r\n      audio={true}\r\n      video={true}\r\n    >\r\n      <VideoConference\r\n        chatMessageFormatter={formatChatMessageLinks}\r\n        SettingsComponent={\r\n          process.env.NEXT_PUBLIC_SHOW_SETTINGS_MENU === 'true' ? SettingsMenu : undefined\r\n        }\r\n      />\r\n      <DebugMode logLevel={LogLevel.debug} />\r\n    </LiveKitRoom>\r\n  );\r\n}\r\n"],"names":["Promise","resolve","then","__webpack_require__","bind","VideoConferenceClientImpl","props","worker","Worker","tu","URL","p","u","b","keyProvider","ExternalE2EEKeyProvider","e2eePassphrase","decodePassphrase","window","location","hash","substring","e2eeEnabled","roomOptions","useMemo","publishDefaults","videoSimulcastLayers","VideoPresets","h540","h216","red","videoCodec","codec","adaptiveStream","pixelDensity","dynacast","e2ee","undefined","room","Room","setKey","setE2EEEnabled","connectOptions","autoSubscribe","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","LiveKitRoom","token","serverUrl","liveKitUrl","audio","video","jsx","VideoConference","chatMessageFormatter","formatChatMessageLinks","SettingsComponent","process","env","NEXT_PUBLIC_SHOW_SETTINGS_MENU","SettingsMenu","DebugMode","logLevel","LogLevel","debug"],"sourceRoot":""}